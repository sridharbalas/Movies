// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 16.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace RightPoint.Data.Generation
{
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\source\Learn\RightPoint\Movies\RightPoint.Framework\EventInventory\_Source\Data\Generation\DALEntityCollection.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class DALEntityCollection : DALEntityCollectionBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("\t#region Collection\r\n\r\n\t[System.SerializableAttribute()]\r\n\tpublic partial class ");
            
            #line 5 "C:\source\Learn\RightPoint\Movies\RightPoint.Framework\EventInventory\_Source\Data\Generation\DALEntityCollection.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(EntityName));
            
            #line default
            #line hidden
            this.Write("RecordCollection : System.Collections.CollectionBase\r\n\t{\r\n\t\tpublic ");
            
            #line 7 "C:\source\Learn\RightPoint\Movies\RightPoint.Framework\EventInventory\_Source\Data\Generation\DALEntityCollection.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(EntityName));
            
            #line default
            #line hidden
            this.Write("RecordCollection()\r\n\t\t{}\r\n\r\n\t\tpublic ");
            
            #line 10 "C:\source\Learn\RightPoint\Movies\RightPoint.Framework\EventInventory\_Source\Data\Generation\DALEntityCollection.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(EntityName));
            
            #line default
            #line hidden
            this.Write("RecordCollection( ");
            
            #line 10 "C:\source\Learn\RightPoint\Movies\RightPoint.Framework\EventInventory\_Source\Data\Generation\DALEntityCollection.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(EntityName));
            
            #line default
            #line hidden
            this.Write("RecordCollection val )\r\n\t\t{\r\n\t\t\tthis.AddRange( val );\r\n\t\t}\r\n\r\n\t\tpublic ");
            
            #line 15 "C:\source\Learn\RightPoint\Movies\RightPoint.Framework\EventInventory\_Source\Data\Generation\DALEntityCollection.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(EntityName));
            
            #line default
            #line hidden
            this.Write("RecordCollection( ");
            
            #line 15 "C:\source\Learn\RightPoint\Movies\RightPoint.Framework\EventInventory\_Source\Data\Generation\DALEntityCollection.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(EntityName));
            
            #line default
            #line hidden
            this.Write("Record[] val )\r\n\t\t{\r\n\t\t\tthis.AddRange( val );\r\n\t\t}\r\n\r\n\t\tpublic ");
            
            #line 20 "C:\source\Learn\RightPoint\Movies\RightPoint.Framework\EventInventory\_Source\Data\Generation\DALEntityCollection.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(EntityName));
            
            #line default
            #line hidden
            this.Write("Record this[ int index ]\r\n\t\t{\r\n\t\t\tget { return ((");
            
            #line 22 "C:\source\Learn\RightPoint\Movies\RightPoint.Framework\EventInventory\_Source\Data\Generation\DALEntityCollection.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(EntityName));
            
            #line default
            #line hidden
            this.Write("Record) (List[ index ])); }\r\n\t\t\tset { List[ index ] = value; }\r\n\t\t}\r\n\r\n\t\tpublic i" +
                    "nt Add( ");
            
            #line 26 "C:\source\Learn\RightPoint\Movies\RightPoint.Framework\EventInventory\_Source\Data\Generation\DALEntityCollection.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(EntityName));
            
            #line default
            #line hidden
            this.Write("Record val )\r\n\t\t{\r\n\t\t\treturn List.Add( val );\r\n\t\t}\r\n\r\n\t\tpublic void AddRange( ");
            
            #line 31 "C:\source\Learn\RightPoint\Movies\RightPoint.Framework\EventInventory\_Source\Data\Generation\DALEntityCollection.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(EntityName));
            
            #line default
            #line hidden
            this.Write("Record[] val )\r\n\t\t{\r\n\t\t\tfor ( int i = 0; i < val.Length; i++ )\r\n\t\t\t{\r\n\t\t\t\tthis.Ad" +
                    "d( val[ i ] );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tpublic void AddRange( ");
            
            #line 39 "C:\source\Learn\RightPoint\Movies\RightPoint.Framework\EventInventory\_Source\Data\Generation\DALEntityCollection.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(EntityName));
            
            #line default
            #line hidden
            this.Write("RecordCollection val )\r\n\t\t{\r\n\t\t\tfor ( int i = 0; i < val.Count; i++ )\r\n\t\t\t{\r\n\t\t\t\t" +
                    "this.Add( val[ i ] );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tpublic bool Contains( ");
            
            #line 47 "C:\source\Learn\RightPoint\Movies\RightPoint.Framework\EventInventory\_Source\Data\Generation\DALEntityCollection.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(EntityName));
            
            #line default
            #line hidden
            this.Write("Record val )\r\n\t\t{\r\n\t\t\treturn List.Contains( val );\r\n\t\t}\r\n\r\n\t\tpublic void CopyTo( " +
                    "");
            
            #line 52 "C:\source\Learn\RightPoint\Movies\RightPoint.Framework\EventInventory\_Source\Data\Generation\DALEntityCollection.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(EntityName));
            
            #line default
            #line hidden
            this.Write("Record[] array, System.Int32 index )\r\n\t\t{\r\n\t\t\tList.CopyTo( array, index );\r\n\t\t}\r\n" +
                    "\r\n\t\tpublic int IndexOf( ");
            
            #line 57 "C:\source\Learn\RightPoint\Movies\RightPoint.Framework\EventInventory\_Source\Data\Generation\DALEntityCollection.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(EntityName));
            
            #line default
            #line hidden
            this.Write("Record val )\r\n\t\t{\r\n\t\t\treturn List.IndexOf( val );\r\n\t\t}\r\n\r\n\t\tpublic void Insert( i" +
                    "nt index, ");
            
            #line 62 "C:\source\Learn\RightPoint\Movies\RightPoint.Framework\EventInventory\_Source\Data\Generation\DALEntityCollection.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(EntityName));
            
            #line default
            #line hidden
            this.Write("Record val )\r\n\t\t{\r\n\t\t\tList.Insert( index, val );\r\n\t\t}\r\n\r\n\t\tnew public ");
            
            #line 67 "C:\source\Learn\RightPoint\Movies\RightPoint.Framework\EventInventory\_Source\Data\Generation\DALEntityCollection.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(EntityName));
            
            #line default
            #line hidden
            this.Write("RecordEnumerator GetEnumerator()\r\n\t\t{\r\n\t\t\treturn new ");
            
            #line 69 "C:\source\Learn\RightPoint\Movies\RightPoint.Framework\EventInventory\_Source\Data\Generation\DALEntityCollection.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(EntityName));
            
            #line default
            #line hidden
            this.Write("RecordEnumerator( this );\r\n\t\t}\r\n\r\n\t\tpublic void Remove( ");
            
            #line 72 "C:\source\Learn\RightPoint\Movies\RightPoint.Framework\EventInventory\_Source\Data\Generation\DALEntityCollection.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(EntityName));
            
            #line default
            #line hidden
            this.Write(@"Record val )
		{
			List.Remove( val );
		}

		public void Sort( System.Collections.IComparer comparer )
		{
    		InnerList.Sort( comparer );
		}

#if !DOTNET_STANDARD
		public void Sort( string sortString )
		{
    		InnerList.Sort( (IComparer) new RightPoint.GenericComparer<");
            
            #line 85 "C:\source\Learn\RightPoint\Movies\RightPoint.Framework\EventInventory\_Source\Data\Generation\DALEntityCollection.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(EntityName));
            
            #line default
            #line hidden
            this.Write(@"Record>(sortString) );
		}
#endif

		protected override void OnInsert( System.Int32 index, System.Object value )
		{
    		OnValidate( value );
		}

		protected override void OnRemove( System.Int32 index, System.Object value )
		{
    		OnValidate( value );
		}

		protected override void OnSet( System.Int32 index, System.Object oldValue, System.Object newValue )
		{
    		OnValidate( oldValue );
    		OnValidate( newValue );
		}

		protected override void OnValidate( System.Object value )
		{
    		if ( (value is ");
            
            #line 107 "C:\source\Learn\RightPoint\Movies\RightPoint.Framework\EventInventory\_Source\Data\Generation\DALEntityCollection.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(EntityName));
            
            #line default
            #line hidden
            this.Write("Record) == false )\r\n    \t\t{\r\n    \t\t\tthrow new System.ArgumentException( \"value mu" +
                    "st be of type ");
            
            #line 109 "C:\source\Learn\RightPoint\Movies\RightPoint.Framework\EventInventory\_Source\Data\Generation\DALEntityCollection.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(EntityName));
            
            #line default
            #line hidden
            this.Write("Record.\" );\r\n    \t\t}\r\n\t\t}\r\n\r\n\t\tpublic class ");
            
            #line 113 "C:\source\Learn\RightPoint\Movies\RightPoint.Framework\EventInventory\_Source\Data\Generation\DALEntityCollection.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(EntityName));
            
            #line default
            #line hidden
            this.Write("RecordEnumerator : System.Collections.IEnumerator\r\n\t\t{\r\n\t\t\tprivate System.Collect" +
                    "ions.IEnumerator _baseEnumerator;\r\n\t\t\tprivate System.Collections.IEnumerable _te" +
                    "mp;\r\n\r\n\t\t\tpublic ");
            
            #line 118 "C:\source\Learn\RightPoint\Movies\RightPoint.Framework\EventInventory\_Source\Data\Generation\DALEntityCollection.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(EntityName));
            
            #line default
            #line hidden
            this.Write("RecordEnumerator( ");
            
            #line 118 "C:\source\Learn\RightPoint\Movies\RightPoint.Framework\EventInventory\_Source\Data\Generation\DALEntityCollection.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(EntityName));
            
            #line default
            #line hidden
            this.Write("RecordCollection mappings )\r\n\t\t\t{\r\n\t\t\t\t_temp = mappings;\r\n\t\t\t\t_baseEnumerator = _" +
                    "temp.GetEnumerator();\r\n\t\t\t}\r\n\r\n\t\t\tpublic ");
            
            #line 124 "C:\source\Learn\RightPoint\Movies\RightPoint.Framework\EventInventory\_Source\Data\Generation\DALEntityCollection.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(EntityName));
            
            #line default
            #line hidden
            this.Write("Record Current\r\n\t\t\t{\r\n\t\t\t\tget { return ((");
            
            #line 126 "C:\source\Learn\RightPoint\Movies\RightPoint.Framework\EventInventory\_Source\Data\Generation\DALEntityCollection.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(EntityName));
            
            #line default
            #line hidden
            this.Write(@"Record) (_baseEnumerator.Current)); }
			}

			System.Object System.Collections.IEnumerator.Current
			{
				get { return _baseEnumerator.Current; }
			}

			public bool MoveNext()
			{
				return _baseEnumerator.MoveNext();
			}

			public void Reset()
			{
				_baseEnumerator.Reset();
			}
		}
	}

	#endregion");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public class DALEntityCollectionBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
